# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install bot dependencies
      working-directory: ./bot
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install server dependencies
      working-directory: ./server
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: 'Create server env file'
      working-directory: ./server
      run: |
        touch .env
        echo OPENAI_ACCESS_TOKEN="xxx1secret0token" >> .env
        echo OPENAI_COMPLETIONS_URL="https://api.openai.com/v1/chat/completions" >> .env
        echo OPENAI_IMAGE_URL="https://api.openai.com/v1/images/generations" >> .env
        echo OPENAI_TRANSLATE_URL="https://api.openai.com/v1/completions" >> .env
        echo OPENAI_GPT_MODEL="gpt-3.5-turbo" >> .env
        echo FASTAPI_ACCESS_TOKEN="123" >> .env
        cat .env
    - name: Test server app with pytest
      working-directory: ./server
      run: |
        pytest
    - name: 'Create bot env file'
      working-directory: ./bot
      run: |
        touch .env
        echo BOT_TOKEN="xxx1secret0token" >> .env
        echo SERVER_URL='http://127.0.0.1:8000' >> .env
        echo FASTAPI_ACCESS_TOKEN="123" >> .env
        cat .env
    - name: Test bot app with pytest
      working-directory: ./bot
      run: |
        pytest